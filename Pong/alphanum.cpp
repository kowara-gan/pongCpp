#include "Alphanum.h"
#include "Game.h"

using namespace std;
int wards[23][5][5] = {
	{//0:0
		{0, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 1, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
	},
	{//1:1
		{0, 0, 1, 0, 0},
		{0, 1, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{1, 1, 1, 1, 1}
	},
	{//2:2
		{0, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1}
	},//3:3
	{
		{1, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{0, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
	},
	{//4:4
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{0, 0, 0, 0, 1}
	},
	{//5:5
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
	},
	{//6:6
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
	},
	{//7:7
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{0, 0, 0, 0, 1},
		{0, 0, 0, 0, 1},
		{0, 0, 0, 0, 1}
	},
	{//8:8
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
	},
	{//9:9
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{0, 0, 0, 0, 1}
	},
	{//W:10
		{1, 0, 0, 0, 1},
		{1, 0, 1, 0, 1},
		{1, 0, 1, 0, 1},
		{1, 0, 1, 0, 1},
		{0, 1, 0, 1, 0}
	},
	{//S:11
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1},
		{0, 0, 0, 0, 1},
		{1, 1, 1, 1, 1}
	},
	{//P:12
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0}
	},
	{//L:13
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1}
	},
	{//E:14
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 0},
		{1, 1, 1, 1, 1}
	},
	{//A:15
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 1},
		{1, 0, 0, 0, 1}
	},
	{//R:16
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 1},
		{1, 1, 1, 1, 0},
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1}
	},
	{//T:17
		{1, 1, 1, 1, 1},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0}
	},
	{//Y:18
		{1, 0, 0, 0, 1},
		{1, 0, 0, 0, 1},
		{0, 1, 0, 1, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0}
	},
	{//upArrow:19
		{0, 0, 1, 0, 0},
		{0, 1, 0, 1, 0},
		{1, 0, 1, 0, 1},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0}
	},
	{//downArrow:20
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{1, 0, 1, 0, 1},
		{0, 1, 0, 1, 0},
		{0, 0, 1, 0, 0}
	},
	{//I:21
		{0, 1, 1, 1, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 0, 1, 0, 0},
		{0, 1, 1, 1, 0}
	},
	{//K:22
		{1, 0, 0, 0, 1},
		{1, 0, 0, 1, 0},
		{1, 1, 1, 0, 0},
		{1, 0, 0, 1, 0},
		{1, 0, 0, 0, 1}
	},
};
//SDL2Ç≈çÏÇÈï∂éöÇÃîzóÒÇçÏÇÈ
vector<SDL_Rect> Alphanum::getAlphanum(int x,int y,int num) {
	vector<SDL_Rect> ret(25);
	int wardPixelSize = WARD_W/5;
	int count = 0;
	//5Å~5Ç…ëŒÇµÇƒéläpÇÃÇ†ÇËÇ»ÇµÇ≈ï\åª
	for (int j = 0; j < 5; ++j) {
		for (int k = 0; k < 5; ++k) {
			ret[count] = {
			   x + k * wardPixelSize,
			   y + j * wardPixelSize,
			   wards[num][j][k] * wardPixelSize,
			   wards[num][j][k] * wardPixelSize
			};
			++count;
		}
	}
		count = 0;
	return ret;
}
//SDL2Ç≈çÏÇ¡ÇΩï∂éöÇÉåÉìÉ_Å[Ç…ï`âÊ
void Alphanum::write(SDL_Renderer* renderer,vector<SDL_Rect> alphaNum)
{
	for (int i = 0; i < 25; ++i) {
		SDL_RenderFillRect(renderer,&alphaNum[i]);
	}
}
//SDL2Ç≈ï∂éöÇçÏÇ¡ÇƒÉåÉìÉ_Å[Ç…ï`âÊ
void Alphanum::writeAlphanum(SDL_Renderer* renderer, int x, int y, int num)
{
	write(renderer, getAlphanum(x, y, num));
}